%{
	#include <stdio.h>
	#include <stdlib.h>
	#include "yminic.tab.h"
	#include "struct.h"

	void set(char* symbol);
	extern int yyerror(char *);
%}

	/*************************************************************************
	 *																		 *
	 * 변수(Identifier) 에 대한 정규 표현식									         *
	 *																		 *
	 *************************************************************************/
id [a-zA-Z_][a-zA-Z0-9_]*

	/**************************************************************************
	 *																		  *
	 * 정수 상수에 대한 정규 표현식											          *
	 *																		  *
	 **************************************************************************/
integer [1-9][0-9]*

	/**************************************************************************
	 *																		  *
	 * 실수 상수에 대한 정규 표현식											          *
	 *																		  *
	 **************************************************************************/
real (0|[1-9][0-9]*)\.(0|[0-9]*[1-9])

	/***************************************************************************
	 *																		   *
	 * 구획 문자(delimiter)에 대한 정규 표현식								           *
	 *																		   *
	 ***************************************************************************/
delim [ \t\r]

ws {delim}+

	/******************************************************************************
	 *																			  *
	 * 변수(Identifier)가 underscore만 이루어진 예외적인 경우를 처리하기 위한 	                  * 
	 * 정규 표현식																      *
	 *																			  *
	 ******************************************************************************/
under_score [_]+

	/**************************************************************************
	 *																		  *
	 * 변수(Identifier)의 첫 글자가 숫자로 시작하는 예외적인 경우를			                  *
	 * 처리하기 위한 정규 표현식											              * 
	 *																		  *
	 **************************************************************************/
digit_first [0-9]+[a-zA-Z|0-9|_]+	

%%

	/**************************************************************************** 
	 *																		    *
	 * 탭(Tab, \t)이나 캐리지 리턴(Carriage return, \r)으로 이루어진                       *
	 * 공백을 무시하기 위한 rule.												        *
	 *																			*
	 ****************************************************************************/
{ws}			;

	/****************************************************************************
	 *																		    *
	 * 2차 과제에서 사용되는 연산자에 대한 rule.							                *
	 *																			*
	 ****************************************************************************/
"+"				{return(PLUS);}
"-"				{return(MINUS);}
"*"				{return(MUL);}
"/"				{return(DIV);}
"="				{return(ASSIGN);}

"<"				{return(LT);}
"<="			{return(LE);}
">"				{return(GT);}
">="			{return(GE);}
"=="			{return(EE);}
"!="			{return(NE);}

	/****************************************************************************
	 *																		    *
	 * 2차 과제에서 사용되는 기타특수문자에 대한 rule.							                *
	 *																			*
	****************************************************************************
	 *																		    *
	 * 상수에 대한 rule.														    *
	 *																			*
	 ****************************************************************************/
"if"			{return(IF);}
"else"			{return(ELSE);}
"print"			{return(PRINT);}
"while"			{return(WHILE);}

{integer}		{set(yytext); return(INT);}
{real}			{set(yytext); return(REAL);}

	/****************************************************************************
	 *																		    *
	 * 변수 대한 rule.															    *
	 *																		 	*
	 ****************************************************************************/
{id}			{set(yytext); return(ID);}


	/****************************************************************************
	 *																		    *
	 * 위에서 정의한 rule 제외한 나머지는 모두 Lexical Error로 처리하는 rule.	                *
	 *																			*
	 ****************************************************************************/
\n				{}

"("				{return yytext[0];}
")"				{return yytext[0];}
";"				{return yytext[0];}

.				{yyerror("lexical error");}
%%

void set(char *value)
{
	yylval.cval = (char*)malloc(sizeof(yytext));
	strcpy(yylval.cval, value);
}

int yywrap (void)
{return 1;} 

